{"version":3,"sources":["concatSubtitles.ts","App.tsx","index.tsx"],"names":["last","arr","length","fmtTs","frameRate","ts","split","reverse","frames","rest","ms","String","a","b","n","sort","Math","round","toMs","Number","padStart","join","fmtSentence","sentence","toVtt","concated","reduce","acc","entry","map","readFile","file","Promise","res","reader","FileReader","onload","e","target","result","readAsArrayBuffer","writeFile","filename","buf","mimeType","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","fileName","download","click","App","useForm","register","watch","handleSubmit","files","useMemo","useState","workbook","setWorkbook","console","log","useEffect","data","Excel","Workbook","xlsx","load","sheets","eachSheet","sheet","sheetId","_sheet","eachRow","row","rowNumber","_row","push","eachCell","cell","value","entries","c","id","val","tsStart","tsEnd","chunk","test","chunks","str","toUpperCase","slice","toLowerCase","_sentenceize","colNumber","undefined","writeBuffer","toWrite","fileNameSansExt","name","content","forEach","vtt","idx","worksheets","find","x","TextEncoder","encode","zip","JSZip","generateAsync","Date","toISOString","onChange","localStorage","setItem","JSON","stringify","ref","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.68602967.chunk.js","sourcesContent":["const last = <T>(arr: T[]) => arr[arr.length - 1]\n\nconst _sentenceize = (str: string) =>\n\tstr.slice(0, 1).toUpperCase() + str.slice(1).toLowerCase()\n\nconst sentenceize = (str: string) =>\n\tstr === str.toUpperCase() ? _sentenceize(str) : str\n\nexport type Row = [tsStart: string, tsEnd: string, chunk: string]\n\nexport const toCellMatrix = (csv: string) =>\n\tcsv\n\t\t.trim()\n\t\t.split('\\n')\n\t\t.map((x) => x.split('\\t').map((x) => x.trim()) as Row)\n\nexport const concat = (rows: Row[]) =>\n\trows\n\t\t.reduce((acc, [tsStart, tsEnd, chunk]) => {\n\t\t\tif (!acc.length || /[.?!]$/.test(last(last(acc).chunks))) {\n\t\t\t\tacc.push({ ts: [], chunks: [] })\n\t\t\t}\n\n\t\t\tlast(acc).ts.push(tsStart)\n\t\t\tlast(acc).ts.push(tsEnd)\n\n\t\t\tlast(acc).chunks.push(chunk)\n\n\t\t\treturn acc\n\t\t}, [])\n\t\t.map(({ ts, chunks }) => ({\n\t\t\tts: [ts[0], last(ts)],\n\t\t\tsentence: sentenceize(chunks.join(' ')),\n\t\t}))\n\nexport type Concated = ReturnType<typeof concat>\n\nexport const toCsv = (concated: Concated) =>\n\tconcated.map(({ ts, sentence }) => [...ts, sentence].join('\\t')).join('\\n')\n\nconst FRAME_RATE = 30\n\nconst clamp = (a: number, b: number) => (n: number) =>\n\t[a, b, n].sort((a, b) => b - a)[1]\n\nconst toMs = (frameRate: number) => (frames: number) =>\n\tclamp(0, 999)(Math.round((frames / frameRate) * 1000))\n\nconst fmtTs = (frameRate: number) => (ts: string) => {\n\tconst [frames, ...rest] = ts.split(':').reverse()\n\n\tconst ms = String(toMs(frameRate)(Number(frames))).padStart(3, '0')\n\n\treturn [rest.reverse().join(':'), ms].join('.')\n}\n\nconst fmtSentence = (sentence: string) => `- ${sentence}`\n\nexport const toVtt = (concated: ReturnType<typeof concat>) =>\n\tconcated\n\t\t.reduce(\n\t\t\t(acc, { ts, sentence }) => {\n\t\t\t\tconst entry = [\n\t\t\t\t\tts.map(fmtTs(FRAME_RATE)).join(' --> '),\n\t\t\t\t\tfmtSentence(sentence),\n\t\t\t\t].join('\\n')\n\n\t\t\t\treturn [...acc, entry]\n\t\t\t},\n\t\t\t['WEBVTT'],\n\t\t)\n\t\t.join('\\n\\n')\n\n// WEBVTT\n\n// 00:01.000 --> 00:04.000\n// - Never drink liquid nitrogen.\n\n// 00:05.000 --> 00:09.000\n// - It will perforate your stomach.\n// - You could die.\n","import { useEffect, useMemo, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport './App.css'\nimport { concat, Concated, Row, toVtt } from './concatSubtitles'\nimport Excel from 'exceljs'\nimport JSZip from 'jszip'\n\nexport const readFile = (file: File) =>\n\tnew Promise<ArrayBuffer>((res) => {\n\t\tconst reader = new FileReader()\n\n\t\treader.onload = (e) => res(e.target!.result as ArrayBuffer)\n\n\t\treader.readAsArrayBuffer(file)\n\t})\n\nexport const writeFile = (\n\tfilename: string,\n\tbuf: Buffer | Uint8Array | Blob,\n\tmimeType: string,\n) => {\n\tconst blob = new Blob([buf], {\n\t\ttype: mimeType,\n\t})\n\n\tconst link = document.createElement('a')\n\n\tlink.href = window.URL.createObjectURL(blob)\n\n\tconst fileName = filename\n\n\tlink.download = fileName\n\tlink.click()\n}\n\nexport const App = () => {\n\tconst { register, watch, handleSubmit } = useForm()\n\n\tconst changeHandler = (data: any) => {\n\t\tlocalStorage.setItem('form', JSON.stringify(data))\n\t}\n\n\tconst files: FileList = useMemo(\n\t\t() => watch('file') ?? ([] as any as FileList),\n\t\t[watch],\n\t)\n\n\tconst [workbook, setWorkbook] = useState<Excel.Workbook | null>(null)\n\n\tconsole.log(workbook)\n\n\tuseEffect(() => {\n\t\tif (!files.length) return\n\t\t;(async () => {\n\t\t\tconst file = files[0]\n\t\t\tconst data = await readFile(file)\n\n\t\t\tconst workbook = new Excel.Workbook()\n\t\t\tawait workbook.xlsx.load(data)\n\n\t\t\tsetWorkbook(workbook)\n\n\t\t\ttype Sheet = Row[]\n\n\t\t\tconst sheets: Sheet[] = []\n\n\t\t\tworkbook.eachSheet((sheet, sheetId) => {\n\t\t\t\tconst _sheet = [] as any as Sheet\n\n\t\t\t\tsheets[sheetId] = _sheet\n\n\t\t\t\tsheet.eachRow((row, rowNumber) => {\n\t\t\t\t\tif (rowNumber === 1) return\n\n\t\t\t\t\tconst _row = [] as any as Row\n\n\t\t\t\t\t_sheet.push(_row)\n\n\t\t\t\t\trow.eachCell((cell) => {\n\t\t\t\t\t\t_row.push(String(cell.value))\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tconsole.log([...sheets.entries()])\n\n\t\t\tconst c = [...sheets.entries()].reduce((acc, [id, val]) => {\n\t\t\t\tif (!val) return acc\n\n\t\t\t\tacc[id] = concat(val)\n\n\t\t\t\treturn acc\n\t\t\t}, [] as Concated[])\n\n\t\t\tworkbook.eachSheet((sheet, sheetId) => {\n\t\t\t\tsheet.eachRow((row, rowNumber) => {\n\t\t\t\t\tif (rowNumber === 1) return\n\n\t\t\t\t\trow.eachCell((cell, colNumber) => {\n\t\t\t\t\t\tconst row =\n\t\t\t\t\t\t\tc[sheetId]?.[\n\t\t\t\t\t\t\t\trowNumber - 2\n\t\t\t\t\t\t\t\t/* -1 for 0 indexing, -1 for header row */\n\t\t\t\t\t\t\t] ?? ({} as any)\n\n\t\t\t\t\t\tcell.value =\n\t\t\t\t\t\t\tcolNumber === 1\n\t\t\t\t\t\t\t\t? row.ts?.[0]\n\t\t\t\t\t\t\t\t: colNumber === 2\n\t\t\t\t\t\t\t\t? row.ts?.[1]\n\t\t\t\t\t\t\t\t: colNumber === 3\n\t\t\t\t\t\t\t\t? row.sentence\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tconst buf = await workbook.xlsx.writeBuffer()\n\n\t\t\tconst toWrite: {\n\t\t\t\tfilename: string\n\t\t\t\tcontent: Buffer | Uint8Array\n\t\t\t\tmimeType: string\n\t\t\t}[] = []\n\n\t\t\tconst fileNameSansExt = `${file.name\n\t\t\t\t.split('.')\n\t\t\t\t.slice(0, -1)\n\t\t\t\t.join('.')}_concat`\n\n\t\t\ttoWrite.push({\n\t\t\t\tfilename: `${fileNameSansExt}.xlsx`,\n\t\t\t\tcontent: buf as Buffer,\n\t\t\t\tmimeType:\n\t\t\t\t\t'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t\t})\n\n\t\t\tc.map(toVtt).forEach((vtt, idx) => {\n\t\t\t\ttoWrite.push({\n\t\t\t\t\tfilename: `${\n\t\t\t\t\t\tworkbook.worksheets.find((x) => x.id === idx).name\n\t\t\t\t\t}.vtt`,\n\t\t\t\t\tcontent: new TextEncoder().encode(vtt),\n\t\t\t\t\tmimeType: 'text/plain',\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tconst zip = new JSZip()\n\n\t\t\ttoWrite.forEach(({ filename, content, mimeType }) => {\n\t\t\t\tzip.file(filename, content, {})\n\t\t\t})\n\n\t\t\tconst content = await zip.generateAsync({ type: 'blob' })\n\n\t\t\twriteFile(\n\t\t\t\t`${fileNameSansExt}_${new Date().toISOString()}.zip`,\n\t\t\t\tcontent,\n\t\t\t\t'application/zip',\n\t\t\t)\n\t\t})()\n\t}, [files])\n\n\treturn (\n\t\t<form onChange={handleSubmit(changeHandler)}>\n\t\t\t<br />\n\t\t\t<label>\n\t\t\t\tUpload file (XLSX)\n\t\t\t\t<input type='file' name='file' ref={register} />\n\t\t\t</label>\n\t\t</form>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}